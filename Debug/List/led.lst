###############################################################################
#
# IAR C/C++ Compiler V7.12.3.989/W32 for MSP430           05/Mar/2020  15:49:13
# Copyright 1996-2019 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for MSP430, 8K KickStart Edition 7.12
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        C:\Users\LittleRandom\Documents\NCSU\3_Junior\Spring Term 2020\ECE
#        306\Projects\Project 06\led.c
#    Command line  =  
#        -f C:\Users\LITTLE~1\AppData\Local\Temp\EWB424.tmp
#        ("C:\Users\LittleRandom\Documents\NCSU\3_Junior\Spring Term 2020\ECE
#        306\Projects\Project 06\led.c" -lC
#        "C:\Users\LittleRandom\Documents\NCSU\3_Junior\Spring Term 2020\ECE
#        306\Projects\Project 06\Debug\List" -o
#        "C:\Users\LittleRandom\Documents\NCSU\3_Junior\Spring Term 2020\ECE
#        306\Projects\Project 06\Debug\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --debug -D__MSP430FR2355__ -e --double=32
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\430\lib\dlib\dl430xlsfn.h" -I ./\ --core=430X --data_model=small
#        -On --multiplier=32 --hw_workaround=CPU40 --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        C:\Users\LittleRandom\Documents\NCSU\3_Junior\Spring Term 2020\ECE
#        306\Projects\Project 06\Debug\List\led.lst
#    Object file   =  
#        C:\Users\LittleRandom\Documents\NCSU\3_Junior\Spring Term 2020\ECE
#        306\Projects\Project 06\Debug\Obj\led.r43
#
###############################################################################

C:\Users\LittleRandom\Documents\NCSU\3_Junior\Spring Term 2020\ECE 306\Projects\Project 06\led.c
      1          //------------------------------------------------------------------------------
      2          //  File Name: led.c
      3          //
      4          //  Description: Contains the conditions and assignments for the LEDs on MSP 430
      5          //
      6          //
      7          //  Quoc Chuong Vu
      8          //  Jan 2020
      9          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (7.12.4)
     10          //------------------------------------------------------------------------------
     11          
     12          //------------------------------------------------------------------------------
     13          #include  "msp430.h"

   \                                 In  segment DATA16_AN, at 0x202
   \   union <unnamed> _A_PAOUT_L
   \                     _A_PAOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x222
   \   union <unnamed> _A_PBOUT_L
   \                     _A_PBOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x242
   \   union <unnamed> _A_PCOUT_L
   \                     _A_PCOUT_L:
   \   000000                DS8 2
     14          #include  "macros.h"
     15          #include  "functions.h"
     16          

   \                                 In  segment CODE, align 2
     17          void Init_LEDs(void){
   \                     Init_LEDs:
     18          //------------------------------------------------------------------------------
     19          // LED Configurations
     20          //------------------------------------------------------------------------------
     21          // Turns on both LEDs
     22            P1OUT &= ~RED_LED;
   \   000000   D2C30202     BIC.B   #0x1, &0x202
     23            P6OUT &= ~GRN_LED;
   \   000004   F2C040004302 BIC.B   #0x40, &0x243
     24          //------------------------------------------------------------------------------
     25          }
   \   00000A   1001         RETA
   \   00000C                REQUIRE _A_PAOUT_L
   \   00000C                REQUIRE _A_PCOUT_L
     26          

   \                                 In  segment CODE, align 2
     27          void Grn_LED_on(void){
   \                     Grn_LED_on:
     28              P6OUT  |= GRN_LED;
   \   000000   F2D040004302 BIS.B   #0x40, &0x243
     29          }
   \   000006   1001         RETA
   \   000008                REQUIRE _A_PCOUT_L
     30          

   \                                 In  segment CODE, align 2
     31          void Red_LED_on(void){
   \                     Red_LED_on:
     32              P1OUT  |= RED_LED;
   \   000000   D2D30202     BIS.B   #0x1, &0x202
     33          }
   \   000004   1001         RETA
   \   000006                REQUIRE _A_PAOUT_L
     34          

   \                                 In  segment CODE, align 2
     35          void Grn_LED_off(void){
   \                     Grn_LED_off:
     36              P6OUT  &= ~GRN_LED;
   \   000000   F2C040004302 BIC.B   #0x40, &0x243
     37          }
   \   000006   1001         RETA
   \   000008                REQUIRE _A_PCOUT_L
     38          

   \                                 In  segment CODE, align 2
     39          void Red_LED_off(void){
   \                     Red_LED_off:
     40              P1OUT  &= ~RED_LED;
   \   000000   D2C30202     BIC.B   #0x1, &0x202
     41          }
   \   000004   1001         RETA
   \   000006                REQUIRE _A_PAOUT_L
     42          

   \                                 In  segment CODE, align 2
     43          void toggle_IR_LED(int ONOFF){
   \                     toggle_IR_LED:
     44                if(ONOFF) P3OUT |= IR_LED;       // ON
   \   000000   0C93         CMP.W   #0x0, R12
   \   000002   0424         JEQ     ??toggle_IR_LED_0
   \   000004   F2D020002202 BIS.B   #0x20, &0x222
   \   00000A   1001         RETA
     45                else P3OUT  &= ~IR_LED;        // OFF
   \                     ??toggle_IR_LED_0:
   \   00000C   F2C020002202 BIC.B   #0x20, &0x222
     46          }
   \   000012   1001         RETA
   \   000014                REQUIRE _A_PBOUT_L

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Grn_LED_off
      4   Grn_LED_on
      4   Init_LEDs
      4   Red_LED_off
      4   Red_LED_on
      4   toggle_IR_LED


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       8  Grn_LED_off
       8  Grn_LED_on
      12  Init_LEDs
       6  Red_LED_off
       6  Red_LED_on
       2  _A_PAOUT_L
       2  _A_PBOUT_L
       2  _A_PCOUT_L
      20  toggle_IR_LED

 
 60 bytes in segment CODE
  6 bytes in segment DATA16_AN
 
 60 bytes of CODE memory
  0 bytes of DATA memory (+ 6 bytes shared)

Errors: none
Warnings: none
